---
- name: "Check for binary"
  ansible.builtin.stat:
    path: "/usr/bin/elastic-agent"
  changed_when: false
  register: __installed_bin

# - name: "Repo install tasks"
#   ansible.builtin.include_tasks: install_repo.yml
#   when: elastic_agent_install_method == "repo"

- name: "Sources install tasks"
  ansible.builtin.include_tasks: install_src.yml
  when: elastic_agent_install_method == "src"

    # - name: "Configuring systemd"
    #   ansible.builtin.template:
    #     src: elastic_agent.service.j2
    #     dest: "/lib/systemd/system/elastic_agent.service"
    #     owner: "{{ elastic_agent_user }}"
    #     group: "{{ elastic_agent_group }}"
    #     mode: "0644"
    #   notify:
    #     - Reload systemd
    #     - Restart elastic_agent
    #
    # - name: "Configuring elastic"
    #   ansible.builtin.template:
    #     src: elastic.hcl.j2
    #     dest: "{{ elastic_agent_config_dir }}/elastic.hcl"
    #     owner: "{{ elastic_agent_user }}"
    #     group: "{{ elastic_agent_group }}"
    #     mode: "0644"
    #   notify: Restart elastic-agent
    #   when: elastic_agent_config is defined and elastic_agent_config | length > 0
    #
    # - name: "Create elastic.d files"
    #   ansible.builtin.template:
    #     src: elastic_config_d.json.j2
    #     dest: "{{ elastic_agent_config_dir }}/{{ item }}.json"
    #     owner: "{{ elastic_agent_user }}"
    #     group: "{{ elastic_agent_group }}"
    #     mode: "0644"
    #   with_items: "{{ elastic_agent_config_d }}"
    #   notify: Restart elastic-agent
    #   when: elastic_agent_config_d is defined and elastic_agent_config_d | length > 0
    #
    # - name: "Start service"
    #   ansible.builtin.service:
    #     daemon_reload: true
    #     name: elastic
    #     state: started
    #     enabled: true
    #   when: elastic_agent_start_service
